
GIT 

1.git status 获取状态（增删改）
2.git add . 把文件修改添加到暂存区；单个文件可以 用 git add readme.txt，所有可以用git add .
3.git commit -m "提交的内容描述" 把暂存区的所有内容提交到当前分支
4.git pull 从远程获取最新版本并merge到本地
5.git status 查看服务器与本地的更新对照
6.git push 将本地更新内容提交到服务器分支
7.git fetch：相当于是从远程获取最新版本到本地，不会自动merge
  git log -p master..origin/master 比较本地的master分支和origin/master分支的差别
  git merge origin/master 合并
  相当于：
  git fetch origin master:tmp
  git diff tmp 
  git merge tmp
8.git pull origin master 相当于git fetch 和 git merge 在实际使用中，git fetch更安全一些。
9.git reset --hard HEAD^ 回退到上个版本，上上个是 HEAD^^，3个是HEAD~3
  回退后，如果想回到当前版本，可以用
  git reset --hart commitID(最后一次提交的ID）。
  git log 记录每次提交的内容及ID，ID可用于回退的版本
  如；git reset --hard b412f19
  如果忘记了ID，可以用git reflog查找commitID.它记录你的每一次操作命令。
10.git checkout --file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令，
   我们在后面的分支管理中会再次遇到git checkout命令。
   如果文件修改后还没有放到暂存区，则退回到工作区的版本。
   如果文件修改后已经添加到暂存区，但又做了修改，则退回到暂存区版本。
11.git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区
   如果要回退暂存区的内容，则这样做：
   a)执行
     git reset HEAD 1.txt，将暂存区的修改撤销掉。
   b)执行
     git checkout -- 1.txt ，将丢弃修改。
	 
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

git 远程提交
